include /tmp/nginx/conf.d.inc/worker_processes.conf.inc;
worker_rlimit_nofile 8192;
error_log /dev/stderr;
events {
  worker_connections  4096;
  multi_accept on;
  use epoll;
}
http {
  server_names_hash_max_size 2048;
  server_names_hash_bucket_size 128;
  variables_hash_max_size 2048;
  proxy_headers_hash_max_size 4096;
  proxy_headers_hash_bucket_size 256;
  client_max_body_size 4096m;

  tcp_nopush on;
  tcp_nodelay on;
  reset_timedout_connection on;
  server_tokens off;

  more_clear_headers Server;

  vhost_traffic_status_zone;
  vhost_traffic_status_zone shared:vhost_traffic_status:128m;
  vhost_traffic_status_filter_by_host on;
  vhost_traffic_status_filter_by_set_key $geoip_country_code country::*;

  include /usr/local/nginx/conf.docker/conf.d.inc/resolver.conf.inc;
  include /usr/local/nginx/conf.docker/conf.d.inc/map.conf.inc;
  include /usr/local/nginx/conf.docker/conf.d.inc/logformat.*.conf.inc;
  include /usr/local/nginx/conf.docker/conf.d.inc/compression.conf.inc;
  include /usr/local/nginx/conf/conf.d.inc/geo.conf.inc;

  access_log  /dev/stdout logs_json_v2_3;

  server {
    listen 80 default_server;
    listen 443 quic reuseport;
    listen 443 ssl;
    http2 on;
    http3 on;
    ssl_certificate     /tmp/nginx/conf.d.inc/ssl/self-signed.crt;
    ssl_certificate_key /tmp/nginx/conf.d.inc/ssl/self-signed.key;
    include /usr/local/nginx/conf.docker/conf.d.inc/ocsp.conf.inc;

    server_name _;
    include /usr/local/nginx/conf.docker/conf.d.inc/ssl_common.conf.inc;

    more_set_headers 'Alt-Svc: h3=":443"; ma=86400';

    modsecurity off;

    location / {
      add_header Content-Type text/plain;
      root   /usr/local/nginx/html;
      index  index.html index.htm;
    }
    location ~ /(healthcheckendpoint|healthz) {
      allow 127.0.0.1;
      deny all;
      access_log off;
      more_set_headers "Content-Type: text/plain";
      return 200 "OK";
    }

    location = /healthcheckendpointjson {
      allow 127.0.0.1;
      deny all;
      access_log off;
      more_set_headers "Content-Type: application/json";
      return 200 '{"status":"UP"}\n';
    }

    location /status {
      allow 127.0.0.1;
      deny all;
      vhost_traffic_status_display;
      vhost_traffic_status_display_format html;
    }
  }
  include  /usr/local/nginx/conf/conf.d/*.conf;
}
