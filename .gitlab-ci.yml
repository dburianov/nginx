image: docker
services:
  - "docker:dind"
stages:
- test
- prerape
- docker_modsecurity
- docker_build
- push
- docker_config
- docker_nginx_test
- failed

variables:
    IMAGE_LATEST: dburianov/nginx-aio:arm-64-latest
    IMAGE_COMMIT: dburianov/nginx-aio:arm-64-$CI_COMMIT_SHORT_SHA
    CI: 'false'
    #DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""

sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml

setvars-job:
  stage: prerape
  script:
    - echo "BUILD_TAG=$(date +%Y%m%d.%H%M)" >> build.env
  artifacts:
    reports:
      dotenv: build.env

.build_script: &build_script
    image: docker:latest
    except:
      changes:
        - "README.md"
    only:
      refs:
        - master
        - main
      variables:
        - $CI_COMMIT_MESSAGE =~ /^Release .+/
        - "$CI_COMMIT_MESSAGE =~ /^(feat|fix): .+/"
        - "$CI_COMMIT_MESSAGE =~ /^Merge branch .* into .main./"
        - $CI_PIPELINE_SOURCE == "schedule"
    services:
        - docker:dind
    script:
        - docker buildx create --use
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - docker buildx build
          --tag dburianov/nginx-aio:$TAG_SSL-latest
          --tag dburianov/nginx-aio:$TAG_SSL-$BUILD_TAG
          --push
          --progress plain
          --platform $ARCH
          -f Dockerfile.$TAG_SSL
          .

docker_modsecurity_build:
    stage: docker_modsecurity
    variables:
      TAG_SSL: "modsecutity_rules"
      ARCH: "linux/amd64,linux/arm/v7,linux/arm64/v8,linux/arm/v8"
    <<: *build_script

docker_boringssl_build:
    stage: docker_build
    variables:
      TAG_SSL: "boringssl"
      ARCH: "linux/amd64"
    <<: *build_script

docker_quictls_build:
    stage: docker_build
    variables:
      TAG_SSL: "linux-amd64-quictls"
      ARCH: "linux/amd64"
    <<: *build_script

docker_quictls_arm64_build:
    stage: docker_build
    tags:
    - arm64
    variables:
      TAG_SSL: "linux-arm64-v8-quictls"
      ARCH: "linux/arm64/v8"
    <<: *build_script

docker_curl_push:
    image: docker:latest
    stage: push
    except:
      changes:
        - "README.md"
    only:
      refs:
        - master
        - main
#        - merge_requests
      variables:
        - $CI_COMMIT_MESSAGE =~ /^Release .+/
        - "$CI_COMMIT_MESSAGE =~ /^(feat|fix): .+/"
        - "$CI_COMMIT_MESSAGE =~ /^Merge branch .* into .main./"
        - $CI_PIPELINE_SOURCE == "schedule"
    services:
        - docker:dind
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - docker login -u $CI_MY_REGISTRY_USER -p $CI_MY_REGISTRY_PASSWORD $CI_MY_REGISTRY

        - docker pull --platform linux/arm64/v8 $CI_MY_REGISTRY/burianov/nginx-aio:linux-arm64-v8-quictls-latest
        - docker pull --platform linux/arm64/v8 $CI_MY_REGISTRY/burianov/nginx-aio:linux-arm64-v8-quictls-$BUILD_TAG
        - docker pull --platform linux/amd64 $CI_MY_REGISTRY/burianov/nginx-aio:linux-amd64-quictls-latest
        - docker pull --platform linux/amd64 $CI_MY_REGISTRY/burianov/nginx-aio:linux-amd64-quictls-$BUILD_TAG

        - docker buildx imagetools create
          -t dburianov/nginx-aio:quictls-latest
          $CI_MY_REGISTRY/burianov/nginx-aio:linux-arm64-v8-quictls-latest
          $CI_MY_REGISTRY/burianov/nginx-aio:linux-amd64-quictls-latest
          --progress plain
        - docker buildx imagetools create
          -t dburianov/nginx-aio:quictls-$BUILD_TAG
          $CI_MY_REGISTRY/burianov/nginx-aio:linux-arm64-v8-quictls-$BUILD_TAG
          $CI_MY_REGISTRY/burianov/nginx-aio:linux-amd64-quictls-$BUILD_TAG
          --progress plain

        - docker rmi
          $CI_MY_REGISTRY/burianov/nginx-aio:linux-arm64-v8-quictls-latest
          $CI_MY_REGISTRY/burianov/nginx-aio:linux-amd64-quictls-latest
          $CI_MY_REGISTRY/burianov/nginx-aio:linux-arm64-v8-quictls-$BUILD_TAG
          $CI_MY_REGISTRY/burianov/nginx-aio:linux-amd64-quictls-$BUILD_TAG

docker_quictls_config_build:
    image: docker:latest
    stage: docker_config
    except:
      changes:
        - "README.md"
    only:
      refs:
        - master_q
        - main_q
      variables:
        - "$CI_COMMIT_MESSAGE =~ /^Config: .+/"
    services:
        - docker:dind
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - docker buildx create --use
        - docker buildx build
          --tag dburianov/nginx-aio:arm-64-quictls-latest
          --tag dburianov/nginx-aio:arm-64-quictls-$BUILD_TAG
          --push
          --progress plain
          -f Dockerfile.quictls.config
          .
#          --platform linux/amd64

docker_boringssl_config_build:
    image: docker:latest
    stage: docker_config
    except:
      changes:
        - "README.md"
    only:
      refs:
        - master_q
        - main_q
      variables:
        - "$CI_COMMIT_MESSAGE =~ /^Config: .+/"
    services:
        - docker:dind
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - docker buildx create --use
        - docker buildx build
          --tag dburianov/nginx-aio:boringssl-latest
          --tag dburianov/nginx-aio:boringssl-$BUILD_TAG
          --push
          --progress plain
          -f Dockerfile.boringssl.config
          .
#          --platform linux/amd64


.docker_nginx_test_script: &docker_nginx_test_script
    image: docker:latest
    stage: docker_nginx_test
    except:
      changes:
        - "README.md"
    only:
      refs:
        - master
        - main
      variables:
        - $CI_PIPELINE_SOURCE == "schedule"
        - $CI_COMMIT_MESSAGE =~ /^Release .+/
        - "$CI_COMMIT_MESSAGE =~ /^test: .+/"
        - "$CI_COMMIT_MESSAGE =~ /^(feat|fix): .+/"
        - "$CI_COMMIT_MESSAGE =~ /^Merge branch .* into .main./"
    services:
        - docker:dind
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - docker buildx create --use
        - docker buildx build
          --tag nginx_test_$TAG_SSL
          --load
          --progress plain
          --build-arg IMAGE=dburianov/nginx-aio:$TAG_SSL-latest
          --platform $ARCH
          -f Dockerfile.test
          .

docker_nginx_boringssl_test:
    stage: docker_nginx_test
    variables:
      TAG_SSL: "boringssl"
      ARCH: "linux/amd64"
    <<: *docker_nginx_test_script

docker_nginx_quictls_test:
    stage: docker_nginx_test
    variables:
      TAG_SSL: "quictls"
      ARCH: "linux/amd64"
    <<: *docker_nginx_test_script

docker_nginx_quictls_test_arm64v8:
    stage: docker_nginx_test
    tags:
    - arm64
    variables:
      TAG_SSL: "quictls"
      ARCH: "linux/amd64"
    <<: *docker_nginx_test_script

.cleanup_script: &cleanup_script
    image: docker:latest
    services:
        - docker:dind
    script:
      - docker logout
      - docker buildx prune --force
      - docker buildx rm --force --all-inactive
      - docker rmi $(docker images -q) --force || exit 0

failed_amd64:
    stage: failed
#    needs:
#    - job: B
#    - job: C
    <<: *cleanup_script
    when: on_failure

failed_arm64_v8:
    tags:
    - arm64
    stage: failed
    <<: *cleanup_script
    when: on_failure

success_amd64:
    stage: failed
    <<: *cleanup_script
    when: on_success

success_arm64_v8:
    tags:
    - arm64
    stage: failed
    <<: *cleanup_script
    when: on_success
