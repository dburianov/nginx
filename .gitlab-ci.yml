image: docker
services:
  - "docker:dind"
stages:
- test
- prerape
- docker_modsecurity
- docker_build
- docker_nginx_test
- push
- failed

variables:
    IMAGE_LATEST: dburianov/nginx-aio:arm-64-latest
    IMAGE_COMMIT: dburianov/nginx-aio:arm-64-$CI_COMMIT_SHORT_SHA
    AMD_TAG: "linux-amd64"
    ARM_TAG: "linux-arm64-v8"
    AMD_ARCH: "linux/amd64"
    ARM_ARCH: "linux/arm64/v8"
    CI: 'false'
    DOCKER_TLS_CERTDIR: ""

include:
  - "https://gitlab.com/burianov/gitla-ci/-/raw/main/templates/.cleanup_script.yml"
  - "https://gitlab.com/burianov/gitla-ci/-/raw/main/templates/.build_script.yml"
  - "https://gitlab.com/burianov/gitla-ci/-/raw/main/templates/.build_script_v2.yml"
  - "https://gitlab.com/burianov/gitla-ci/-/raw/main/templates/.docker_nginx_test_script.yml"
  - template: Security/SAST.gitlab-ci.yml

sast:
  stage: test

setvars-job:
  stage: prerape
  script:
    - echo "BUILD_TAG=$(date +%Y%m%d.%H%M)" >> build.env
  artifacts:
    reports:
      dotenv: build.env

#docker_modsecurity_build:
#    stage: docker_modsecurity
#    variables:
#      TAG_SSL: "modsecutity_rules"
#      ARCH: "linux/amd64,linux/arm/v7,linux/arm64/v8,linux/arm/v8"
#      DOCKERFILE_SUFIX: modsecutity_rules
#      DOCKER_REPO: "dburianov/modsecurity_rules"
#    extends: .build_script

# new nginx build
# renun 2 time
# rerun
docker_build:
    stage: docker_build
    variables:
      TAG_SSL: $AMD_TAG
      ARCH: $AMD_ARCH
      DOCKER_REPO: "$CI_MY_REGISTRY/burianov/nginx-aio"
    extends: .build_script_v2

docker_arm64_build:
    stage: docker_build
    tags:
    - arm64
    variables:
      TAG_SSL: $ARM_TAG
      ARCH: $ARM_ARCH
      DOCKER_REPO: "$CI_MY_REGISTRY/burianov/nginx-aio"
    extends: .build_script_v2

# run tests
docker_nginx_boringssl_test:
    stage: docker_nginx_test
    variables:
      TAG_SSL: "$AMD_TAG-boringssl"
      ARCH: $AMD_ARCH
      DOCKERFILE_SUFIX: "test"
      DOCKER_REPO: "$CI_MY_REGISTRY/burianov/nginx-aio"
    extends: .docker_nginx_test_script

docker_nginx_boringssl_test_arm64v8:
    stage: docker_nginx_test
    tags:
    - arm64
    variables:
      TAG_SSL: "$ARM_TAG-boringssl"
      ARCH: $ARM_ARCH
      DOCKERFILE_SUFIX: "test"
      DOCKER_REPO: "$CI_MY_REGISTRY/burianov/nginx-aio"
    extends: .docker_nginx_test_script

docker_nginx_quictls_test:
    stage: docker_nginx_test
    variables:
      TAG_SSL: "$AMD_TAG-quictls"
      ARCH: $AMD_ARCH
      DOCKERFILE_SUFIX: "test"
      DOCKER_REPO: "$CI_MY_REGISTRY/burianov/nginx-aio"
    extends: .docker_nginx_test_script

docker_nginx_quictls_test_arm64v8:
    stage: docker_nginx_test
    tags:
    - arm64
    variables:
      TAG_SSL: "$ARM_TAG-quictls"
      ARCH: $ARM_ARCH
      DOCKERFILE_SUFIX: "test"
      DOCKER_REPO: "$CI_MY_REGISTRY/burianov/nginx-aio"
    extends: .docker_nginx_test_script

.push_script: &push_script
    image: docker:latest
    except:
      changes:
        - "README.md"
    only:
      refs:
        - master
        - main
#        - merge_requests
      variables:
        - $CI_COMMIT_MESSAGE =~ /^Release .+/
        - $CI_COMMIT_MESSAGE =~ /^Push images .+/
        - "$CI_COMMIT_MESSAGE =~ /^(feat|fix): .+/"
        - "$CI_COMMIT_MESSAGE =~ /^Merge branch .* into .main./"
        - $CI_PIPELINE_SOURCE == "schedule"
    services:
        - docker:dind
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - docker login -u $CI_MY_REGISTRY_USER -p $CI_MY_REGISTRY_PASSWORD $CI_MY_REGISTRY

        - docker pull --platform $ARCH_ONE $DOCKER_REPO:$TAG_ONE-latest
        - docker pull --platform $ARCH_ONE $DOCKER_REPO:$TAG_ONE-$BUILD_TAG
        - docker pull --platform $ARCH_TWO $DOCKER_REPO:$TAG_TWO-latest
        - docker pull --platform $ARCH_TWO $DOCKER_REPO:$TAG_TWO-$BUILD_TAG

        - docker buildx imagetools create
          -t $DOCKER_REPO_DST:$SSL_VENDOR-latest
          -t $DOCKER_REPO:$SSL_VENDOR-latest
          $DOCKER_REPO:$TAG_ONE-latest
          $DOCKER_REPO:$TAG_TWO-latest
          --progress plain
        - docker buildx imagetools create
          -t $DOCKER_REPO_DST:$SSL_VENDOR-$BUILD_TAG
          -t $DOCKER_REPO:$SSL_VENDOR-$BUILD_TAG
          $DOCKER_REPO:$TAG_ONE-$BUILD_TAG
          $DOCKER_REPO:$TAG_TWO-$BUILD_TAG
          --progress plain

docker_boringssl_push:
    stage: push
    variables:
      SSL_VENDOR: boringssl
      TAG_ONE: $ARM_TAG-$SSL_VENDOR
      TAG_TWO: $AMD_TAG-$SSL_VENDOR
      ARCH_ONE: $ARM_ARCH
      ARCH_TWO: $AMD_ARCH
      DOCKER_REPO: "$CI_MY_REGISTRY/burianov/nginx-aio"
      DOCKER_REPO_DST: "dburianov/nginx-aio"
    <<: *push_script

docker_quictls_push:
    stage: push
    variables:
      SSL_VENDOR: quictls
      TAG_ONE: $ARM_TAG-$SSL_VENDOR
      TAG_TWO: $AMD_TAG-$SSL_VENDOR
      ARCH_ONE: $ARM_ARCH
      ARCH_TWO: $AMD_ARCH
      DOCKER_REPO: "$CI_MY_REGISTRY/burianov/nginx-aio"
      DOCKER_REPO_DST: "dburianov/nginx-aio"
    <<: *push_script

docker_boringssl_mini_push:
    stage: push
    variables:
      SSL_VENDOR: boringssl-mini
      TAG_ONE: $ARM_TAG-$SSL_VENDOR
      TAG_TWO: $AMD_TAG-$SSL_VENDOR
      ARCH_ONE: $ARM_ARCH
      ARCH_TWO: $AMD_ARCH
      DOCKER_REPO: "$CI_MY_REGISTRY/burianov/nginx-aio"
      DOCKER_REPO_DST: "dburianov/nginx-aio"
    <<: *push_script

docker_quictls_mini_push:
    stage: push
    variables:
      SSL_VENDOR: quictls-mini
      TAG_ONE: $ARM_TAG-$SSL_VENDOR
      TAG_TWO: $AMD_TAG-$SSL_VENDOR
      ARCH_ONE: $ARM_ARCH
      ARCH_TWO: $AMD_ARCH
      DOCKER_REPO: "$CI_MY_REGISTRY/burianov/nginx-aio"
      DOCKER_REPO_DST: "dburianov/nginx-aio"
    <<: *push_script

docker_nvidia_push:
    stage: push
    variables:
      SSL_VENDOR: quictls-nvidia
      TAG_TWO: $AMD_TAG-$SSL_VENDOR
      ARCH_TWO: $AMD_ARCH
      DOCKER_REPO: "$CI_MY_REGISTRY/burianov/nginx-aio"
      DOCKER_REPO_DST: "dburianov/nginx-aio"
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - docker login -u $CI_MY_REGISTRY_USER -p $CI_MY_REGISTRY_PASSWORD $CI_MY_REGISTRY

        - docker pull $DOCKER_REPO:$TAG_TWO-latest
        - docker pull $DOCKER_REPO:$TAG_TWO-$BUILD_TAG

        - docker buildx imagetools create
          -t $DOCKER_REPO_DST:$SSL_VENDOR-latest
          -t $DOCKER_REPO:$SSL_VENDOR-latest
          $DOCKER_REPO:$TAG_TWO-latest
          --progress plain
        - docker buildx imagetools create
          -t $DOCKER_REPO_DST:$SSL_VENDOR-$BUILD_TAG
          -t $DOCKER_REPO:$SSL_VENDOR-$BUILD_TAG
          $DOCKER_REPO:$TAG_TWO-$BUILD_TAG
          --progress plain


cleanup_amd64:
    stage: failed
    extends: .cleanup_script
    when: always

cleanup_arm64_v8:
    tags:
    - arm64
    stage: failed
    extends: .cleanup_script
    when: always
#    needs:
#    - job: B
#    - job: C

